/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shha;

import static java.lang.Integer.parseInt;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import static shha.ViewChartPanel.allergyTextArea;
import static shha.ViewChartPanel.chartTextArea;
import static shha.ViewChartPanel.doctorTextField;
import static shha.ViewChartPanel.generalTextArea;
import static shha.ViewChartPanel.hiddenSSNLabel;
import static shha.ViewChartPanel.insuranceTextArea;
import static shha.ViewChartPanel.medTextArea;
import static shha.ViewChartPanel.nameLabel;
import static shha.ViewChartPanel.referredTextArea;
import static shha.ViewChartPanel.visitTextArea;
import static shha.mainGUI2.chartTablePanel;
import static shha.mainGUI2.articleTabPanel;
import static shha.mainGUI2.defaultPatientPanel;
import static shha.mainGUI2.patientsContainerPanel;

/**
 *
 * @author Sheldon
 */
public class ViewPatientPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPatientPanel
     */
    public ViewPatientPanel() {
        initComponents();
        String[] doctorsArray = grabDoctors();
        doctorComboBox.setModel(new javax.swing.DefaultComboBoxModel(doctorsArray));
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        firstNameText = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        lastNameText = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        middleIntText = new javax.swing.JTextField();
        middleIntLabel = new javax.swing.JLabel();
        ssnLabel = new javax.swing.JLabel();
        ssnText = new javax.swing.JTextField();
        address1Text = new javax.swing.JTextField();
        address1Label = new javax.swing.JLabel();
        cityText = new javax.swing.JTextField();
        cityLabel = new javax.swing.JLabel();
        stateLabel = new javax.swing.JLabel();
        zipText = new javax.swing.JTextField();
        zipLabel = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        genderLabel = new javax.swing.JLabel();
        dobLabel = new javax.swing.JLabel();
        address2Label = new javax.swing.JLabel();
        address2Text = new javax.swing.JTextField();
        phoneLabel = new javax.swing.JLabel();
        phoneText = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        stateComboBox = new javax.swing.JComboBox();
        monthComboBox = new javax.swing.JComboBox();
        dayComboBox = new javax.swing.JComboBox();
        yearComboBox = new javax.swing.JComboBox();
        doctorLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        commenstLabel = new javax.swing.JLabel();
        commentsJScrollPane = new javax.swing.JScrollPane();
        commentsTextArea = new javax.swing.JTextArea();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        viewChartButton = new javax.swing.JButton();
        doctorComboBox = new javax.swing.JComboBox();

        firstNameText.setEnabled(false);
        firstNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextActionPerformed(evt);
            }
        });

        firstNameLabel.setText(" First Name");

        lastNameText.setEnabled(false);

        lastNameLabel.setText(" Last Name");

        middleIntText.setEnabled(false);

        middleIntLabel.setText("Middle Int.");

        ssnLabel.setText(" Social Security #");

        ssnText.setEnabled(false);
        ssnText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ssnTextFocusGained(evt);
            }
        });
        ssnText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ssnTextMouseClicked(evt);
            }
        });

        address1Text.setEnabled(false);
        address1Text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                address1TextMouseClicked(evt);
            }
        });

        address1Label.setText(" Address 1");

        cityText.setEnabled(false);
        cityText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cityTextMouseClicked(evt);
            }
        });
        cityText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTextActionPerformed(evt);
            }
        });

        cityLabel.setText(" City");

        stateLabel.setText(" State");

        zipText.setEnabled(false);
        zipText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zipTextMouseClicked(evt);
            }
        });

        zipLabel.setText(" Zip Code");

        maleRadioButton.setText("Male");
        maleRadioButton.setEnabled(false);
        maleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRadioButtonActionPerformed(evt);
            }
        });

        femaleRadioButton.setText("Female");
        femaleRadioButton.setEnabled(false);
        femaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleRadioButtonActionPerformed(evt);
            }
        });

        genderLabel.setText(" Sex");

        dobLabel.setText(" Date of Birth");

        address2Label.setText(" Address 2");

        address2Text.setEnabled(false);
        address2Text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                address2TextMouseClicked(evt);
            }
        });

        phoneLabel.setText(" Phone");

        phoneText.setEnabled(false);
        phoneText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phoneTextFocusGained(evt);
            }
        });
        phoneText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phoneTextMouseClicked(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        stateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alabama", "Alaska", "Arizona", "Arkansas",
            "California", "Colorado", "Connecticut",
            "Delaware", "Dist. of Columbia","Florida","Georgia",
            "Hawaii","Idaho","Illinois","Indiana", "Iowa",
            "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
            "Massachusetts", "Michigan", "Minnesota", "Mississippi",
            "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
            "New Jersey", "New Mexico", "New York", "North Carolina",
            "North Dakota", "Ohio", "Oklahoma","Oregon","Pennsylvania",
            "Rhode Island","South Carolina","South Dakota","Tennessee",
            "Texas","Utah","Vermont","Virginia","Washington","West Virginia",
            "Wyoming"}));
stateComboBox.setEnabled(false);
stateComboBox.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        stateComboBoxActionPerformed(evt);
    }
    });

    monthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Month:", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
    monthComboBox.setEnabled(false);
    monthComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            monthComboBoxActionPerformed(evt);
        }
    });

    dayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Day:", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
        "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21",
        "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
dayComboBox.setEnabled(false);
dayComboBox.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
    dayComboBoxActionPerformed(evt);
    }
    });

    yearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Year:", "1900","1901","1902","1903","1904",
        "1905","1906","1907","1908","1909","1910","1911",
        "1912","1913","1914","1915","1916","1917","1918",
        "1919","1920","1921","1922","1923","1924","1925",
        "1926","1927","1928","1929","1930","1931","1932",
        "1933","1934","1935","1936","1937","1938","1939",
        "1940","1941","1942","1943","1944","1945","1946",
        "1947","1948","1949","1950","1951","1952","1953",
        "1954","1955","1956","1957","1958","1959","1960",
        "1961","1962","1963","1964","1965","1966","1967",
        "1968","1969","1970","1971","1972","1973","1974",
        "1975","1976","1977","1978","1979","1980","1981",
        "1982","1983","1984","1985","1986","1987","1988",
        "1989","1990","1991","1992","1993","1994","1995",
        "1996","1997","1998","1999","2000","2001","2002",
        "2003","2004","2005","2006","2007","2008","2009",
        "2010","2011","2012","2013","2014","2015"}));
yearComboBox.setEnabled(false);
yearComboBox.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
    yearComboBoxActionPerformed(evt);
    }
    });

    doctorLabel.setText(" Doctor");

    emailLabel.setText(" Email");

    emailText.setEnabled(false);
    emailText.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            emailTextMouseClicked(evt);
        }
    });

    commenstLabel.setText(" Comments");

    commentsTextArea.setColumns(20);
    commentsTextArea.setRows(5);
    commentsTextArea.setEnabled(false);
    commentsJScrollPane.setViewportView(commentsTextArea);

    editButton.setText("Edit");
    editButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            editButtonActionPerformed(evt);
        }
    });

    deleteButton.setText("Delete");
    deleteButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            deleteButtonActionPerformed(evt);
        }
    });

    viewChartButton.setText("Chart");
    viewChartButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            viewChartButtonActionPerformed(evt);
        }
    });

    doctorComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alabama", "Alaska", "Arizona", "Arkansas",
        "California", "Colorado", "Connecticut",
        "Delaware", "Dist. of Columbia","Florida","Georgia",
        "Hawaii","Idaho","Illinois","Indiana", "Iowa",
        "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
        "Massachusetts", "Michigan", "Minnesota", "Mississippi",
        "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
        "New Jersey", "New Mexico", "New York", "North Carolina",
        "North Dakota", "Ohio", "Oklahoma","Oregon","Pennsylvania",
        "Rhode Island","South Carolina","South Dakota","Tennessee",
        "Texas","Utah","Vermont","Virginia","Washington","West Virginia",
        "Wyoming"}));
doctorComboBox.setEnabled(false);
doctorComboBox.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
    doctorComboBoxActionPerformed(evt);
    }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(98, 98, 98)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(firstNameLabel)
                                .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(middleIntText)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(middleIntLabel)
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addComponent(address1Text)
                        .addComponent(address2Text)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dobLabel)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(address1Label)
                                .addComponent(address2Label)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(saveButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(editButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(deleteButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(viewChartButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(cancelButton)))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lastNameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cityLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cityText)
                            .addComponent(lastNameText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zipText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(zipLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addComponent(phoneLabel)
                        .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(23, 23, 23)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(commenstLabel)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ssnLabel)
                                .addComponent(ssnText, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(stateLabel))
                            .addGap(33, 33, 33)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(femaleRadioButton)
                                .addComponent(maleRadioButton)
                                .addComponent(genderLabel)))
                        .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(doctorLabel)
                        .addComponent(commentsJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(doctorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(emailLabel)
                        .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 780, Short.MAX_VALUE))))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(30, 30, 30)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ssnLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ssnText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(middleIntLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(middleIntText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lastNameLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(firstNameLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cityLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(address1Label)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(address1Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(stateLabel))))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(genderLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(maleRadioButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(femaleRadioButton)))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(doctorLabel, javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(address2Label)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(address2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(zipLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(zipText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(doctorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(commenstLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(commentsJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(dobLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(emailLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(viewChartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(phoneLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 9, Short.MAX_VALUE)))
            .addContainerGap())
    );
    }// </editor-fold>//GEN-END:initComponents

    private void ssnTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ssnTextFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_ssnTextFocusGained

    private void ssnTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ssnTextMouseClicked
        ssnText.setText("");
    }//GEN-LAST:event_ssnTextMouseClicked

    private void address1TextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_address1TextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_address1TextMouseClicked

    private void cityTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cityTextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTextMouseClicked

    private void zipTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zipTextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_zipTextMouseClicked

    private void address2TextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_address2TextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_address2TextMouseClicked

    private void phoneTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneTextFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTextFocusGained

    private void phoneTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneTextMouseClicked
        phoneText.setText("");
    }//GEN-LAST:event_phoneTextMouseClicked

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        //Add DB Functions here above the clearAddPatientPanel call
        //sex is not working
        Database db = new Database("SMSDB2");
        int day = parseInt(dayComboBox.getSelectedItem().toString());
        int year = parseInt(yearComboBox.getSelectedItem().toString());
        String gender = getSelectedButtonText(genderButtonGroup);
        String query = "UPDATE patients SET " +
                        "firstName='" + firstNameText.getText() + "', " +
                        "middleInt='" + middleIntText.getText() + "', " +
                        "lastName='" + lastNameText.getText() + "', " +
                        "ssn='" + ssnText.getText() + "', " +
                        "sex='" + gender + "', " +
                        "address1='" + address1Text.getText() + "', " +
                        "address2='" + address2Text.getText() + "', " +
                        "city='" + cityText.getText() + "', " +
                        "state='" + stateComboBox.getSelectedItem().toString() + "', " +
                        "zip='" + zipText.getText() + "', " +
                        "month='" + monthComboBox.getSelectedItem() + "', " +
                        "day=" + day + ", " +
                        "birthYear=" + year +", " +
                        "phone='" + phoneText.getText() + "',  " +
                        "email='" + emailText.getText() + "', " +
                        "doctorAssign='" + doctorComboBox.getSelectedItem() + "', " +
                        "comments='" + commentsTextArea.getText() +"' " +
                        "WHERE ssn='" + ssnText.getText() + "'";
        db.executePatientUpdate(query);
        JOptionPane.showMessageDialog(null, "Patient Updated");
        editPatientInfo(false);
        clearViewPatientPanel();
        System.out.println(getSelectedButtonText(genderButtonGroup));
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        clearViewPatientPanel();

    }//GEN-LAST:event_cancelButtonActionPerformed

    private void stateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateComboBoxActionPerformed

    private void monthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthComboBoxActionPerformed

    private void dayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayComboBoxActionPerformed

    private void yearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearComboBoxActionPerformed

    private void emailTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailTextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextMouseClicked

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        saveButton.setEnabled(true);
        editPatientInfo(true);
    }//GEN-LAST:event_editButtonActionPerformed

    private void cityTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTextActionPerformed

    private void firstNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextActionPerformed
    //Precondition: The database is accessible
    //Postcondition: The patient is deleted
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        String query = "DELETE FROM patients " +
                       "WHERE ssn='" + ssnText.getText() + "'";
        String patient_chart_query = "DELETE FROM patient_chart " +
                                     "WHERE patient_ssn='" + ssnText.getText() + "'";
        
        Database db = new Database("SMSDB2");
        db.executePatientUpdate(query);
        db.executePatientUpdate(patient_chart_query);
        
        JOptionPane.showMessageDialog(null, "Patient Deleted");
        editPatientInfo(false);
        clearViewPatientPanel();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void viewChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewChartButtonActionPerformed
            patientsContainerPanel.removeAll();
            patientsContainerPanel.repaint();
            patientsContainerPanel.revalidate();

            ViewChartPanel viewChartPanel = new ViewChartPanel();
            
            chartTablePanel.add(viewChartPanel);
            chartTablePanel.repaint();
            chartTablePanel.revalidate();
            
            patientsContainerPanel.add(chartTablePanel);
            patientsContainerPanel.repaint();
            patientsContainerPanel.revalidate();
            
            String name = firstNameText.getText() + " " + lastNameText.getText();
            fillOutPatientChart();
            ViewChartPanel.nameLabel.setText(name);
            
    }//GEN-LAST:event_viewChartButtonActionPerformed

    private void doctorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorComboBoxActionPerformed

    private void maleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRadioButtonActionPerformed
        femaleRadioButton.setSelected(false);
    }//GEN-LAST:event_maleRadioButtonActionPerformed

    private void femaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleRadioButtonActionPerformed
        maleRadioButton.setSelected(false);
    }//GEN-LAST:event_femaleRadioButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel address1Label;
    public static javax.swing.JTextField address1Text;
    private javax.swing.JLabel address2Label;
    public static javax.swing.JTextField address2Text;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel cityLabel;
    public static javax.swing.JTextField cityText;
    private javax.swing.JLabel commenstLabel;
    private javax.swing.JScrollPane commentsJScrollPane;
    public static javax.swing.JTextArea commentsTextArea;
    public static javax.swing.JComboBox dayComboBox;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel dobLabel;
    public static javax.swing.JComboBox doctorComboBox;
    private javax.swing.JLabel doctorLabel;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel emailLabel;
    public static javax.swing.JTextField emailText;
    public static javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JLabel firstNameLabel;
    public static javax.swing.JTextField firstNameText;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel lastNameLabel;
    public static javax.swing.JTextField lastNameText;
    public static javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JLabel middleIntLabel;
    public static javax.swing.JTextField middleIntText;
    public static javax.swing.JComboBox monthComboBox;
    private javax.swing.JLabel phoneLabel;
    public static javax.swing.JTextField phoneText;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel ssnLabel;
    public static javax.swing.JTextField ssnText;
    public static javax.swing.JComboBox stateComboBox;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JButton viewChartButton;
    public static javax.swing.JComboBox yearComboBox;
    private javax.swing.JLabel zipLabel;
    public static javax.swing.JTextField zipText;
    // End of variables declaration//GEN-END:variables

    
    //Method to edit Employee Info
 private void editPatientInfo(Boolean str){
        saveButton.setEnabled(str);
        firstNameText.setEnabled(str);
        middleIntText.setEnabled(str);
        lastNameText.setEnabled(str);
       // ssnText.setEnabled(str);
        maleRadioButton.setEnabled(str);
        femaleRadioButton.setEnabled(str);
        address1Text.setEnabled(str);
        address2Text.setEnabled(str);
        cityText.setEnabled(str);
        stateComboBox.setEnabled(str);
        zipText.setEnabled(str);
        monthComboBox.setEnabled(str);
        dayComboBox.setEnabled(str);
        yearComboBox.setEnabled(str);
        phoneText.setEnabled(str);
        emailText.setEnabled(str);
        doctorComboBox.setEnabled(str);
        commentsTextArea.setEnabled(str);
        
    }    
    
private void clearViewPatientPanel(){
        //Clear Panel
        patientsContainerPanel.removeAll();
        patientsContainerPanel.repaint();
        patientsContainerPanel.revalidate();
        patientsContainerPanel.add(defaultPatientPanel);
        patientsContainerPanel.repaint();
        patientsContainerPanel.revalidate();
        
        //Reset text field values
        firstNameText.setText("");
        middleIntText.setText("");
        lastNameText.setText("");
        ssnText.setText("###-##-####");
        genderButtonGroup.clearSelection();
        address1Text.setText("");
        address2Text.setText("");
        cityText.setText("");
        stateComboBox.setSelectedIndex(0);
        zipText.setText("");
        phoneText.setText("###-###-####");
        emailText.setText("");
        doctorComboBox.setSelectedIndex(0);
        commentsTextArea.setText("");
        monthComboBox.setSelectedIndex(0);
        dayComboBox.setSelectedIndex(0);
        yearComboBox.setSelectedIndex(0);
        
        
    }

 //Function returns the string value of a given button group   
    public String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                return button.getText();
            }
        }

        return null;
    }
    
    //Precondition: THe database is in an accessible state
    //Postcondition: The doctor's textbox is populated with the doctors in the
    //               database
    private String[] grabDoctors() {
        String[] doctors = null;
        Database db = new Database("SMSDB2");
        ResultSet doctorsResult = db.queryDoctors();
        String arr = null;
                
        try {
            doctorsResult.last();
            int rowCount = doctorsResult.getRow();
            doctors = new String[rowCount];
            doctorsResult.beforeFirst();
            String firstName= null;
            String lastName = null;
            String fullName = null;
            int counter = 0;
            
            while (doctorsResult.next()) {
                firstName = doctorsResult.getString(1);
                lastName = doctorsResult.getString(2);
                fullName = lastName + "," + firstName;
                doctors[counter] = fullName;
                counter++;
        }           
            
        }catch(SQLException e) {
            System.out.println("Error parsing doctors");
            System.out.println(e.toString());
        }
        
        return doctors;
        
    }
    
    private void fillOutPatientChart() {
        Database db = new Database("SMSDB2");
        String query = "SELECT * from patient_chart" +
                       " WHERE patient_ssn='"+ ssnText.getText() +  "'";
        ResultSet rs = db.executeQuery(query);
        try {
            rs.next();
            System.out.println(rs.getString(2));
            generalTextArea.setText(rs.getString(2));
            allergyTextArea.setText(rs.getString(3));
            medTextArea.setText(rs.getString(4));
            referredTextArea.setText(rs.getString(5));
            insuranceTextArea.setText(rs.getString(6));
            visitTextArea.setText(rs.getString(7));
            doctorTextField.setText(rs.getString(8));
            chartTextArea.setText(rs.getString(9));
            hiddenSSNLabel.setText(ssnText.getText());
            
        } catch(SQLException e) {
            System.out.println(e.toString());
        }
    }
}
