/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shha;

import java.awt.TextArea;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import static shha.mainGUI2.tcPanel;


/**
 *
 * @author Sheldon
 */
public class TimeClockPanel extends javax.swing.JPanel {

    /**
     * Creates new form TimeClockPanel
     */
    Database db = new Database("SMSDB2");       //for the database
    Date timeIn, timeOut;   //instance variables for when they punch in and out
    
    public TimeClockPanel() {
        initComponents();
        timeIn = null;         //null when initialized
        timeOut = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        punchInButton = new javax.swing.JButton();
        punchOutButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        timeLabel = new javax.swing.JLabel();
        imgLabel = new javax.swing.JLabel();
        hoursLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(700, 500));

        punchInButton.setText("Punch In");
        punchInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                punchInButtonActionPerformed(evt);
            }
        });

        punchOutButton.setText("Punch Out");
        punchOutButton.setEnabled(false);
        punchOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                punchOutButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        timeLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("Get To Work!!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        hoursLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        hoursLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(punchInButton)
                            .addComponent(punchOutButton))
                        .addGap(40, 40, 40)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(hoursLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {punchInButton, punchOutButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(punchInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76)
                                .addComponent(punchOutButton)))))
                .addGap(62, 62, 62)
                .addComponent(hoursLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {punchInButton, punchOutButton});

    }// </editor-fold>//GEN-END:initComponents

    private void punchInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_punchInButtonActionPerformed
        punchInButton.setEnabled(false);
        punchOutButton.setEnabled(true);
        DateFormat dateFormat = new SimpleDateFormat("hh:mm a");
        Calendar calendar = Calendar.getInstance(Locale.getDefault());
        java.util.Date now = calendar.getTime();
        timeIn = now;         //make timeIn that calendar time
        
        String time = dateFormat.format(now);
        //Parse Time - Remove 0 ex. 03:00 PM > 3:00 PM
        int i = time.length();
        if (time.charAt(0) == '0')
        { 
            time = time.substring(1); 
        }
        System.out.println("Punch In - " + time);
        
        final String displayInTime = time;
        
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                timeLabel.setText("Let's Save A Life!");
                timeLabel.updateUI();  // repaint(), etc. according to changed states
                try {
                    TimeUnit.MILLISECONDS.sleep(3000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(TimeClockPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
  
        timeLabel.setText("Punch In - " + displayInTime);
        imgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/checkmarksm.png")));
      
        tcPanel.repaint();
        tcPanel.revalidate();
    }//GEN-LAST:event_punchInButtonActionPerformed

    private void punchOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_punchOutButtonActionPerformed
        punchOutButton.setEnabled(false);
        punchInButton.setEnabled(true);
        DateFormat dateFormat = new SimpleDateFormat("hh:mm a");
        Calendar calendar = Calendar.getInstance(Locale.getDefault());
        java.util.Date now = calendar.getTime();
        
        timeOut = now;  //make timeout the time they punched out
        
         String time = dateFormat.format(now);
        //Parse Time - Remove 0 ex. 03:00 PM > 3:00 PM
        int i = time.length();
        if (time.charAt(0) == '0')
        { 
            time = time.substring(1); 
        }
        System.out.println("Punch Out - " + time);
        
        final String displayOutTime = time;
        
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                timeLabel.setText("Great Work Today!");
                timeLabel.updateUI();  // repaint(), etc. according to changed states
                try {
                    TimeUnit.MILLISECONDS.sleep(3000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(TimeClockPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
  
        timeLabel.setText("Punch Out - " + displayOutTime);
        imgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/byesm.png")));

        
        double total = calculateTimeWorked(); //Display time worked on console
        hoursLabel.setText("You worked " + total + " hours today.");
  
        tcPanel.repaint();
        tcPanel.revalidate();
    }//GEN-LAST:event_punchOutButtonActionPerformed

    
    private double calculateTimeWorked(){             //let's get to it
        long off = timeOut.getTime();       //get that particular date in milliseconds
        System.out.println(off); //test
        long on = timeIn.getTime();         //same as line above
        System.out.println(on); //test

        //subtract total time then were in the office in milliseconds
        long workedTimeInMillis = off - on;
        System.out.println(workedTimeInMillis); //test
        
        /* -1000 miliseconds make a minute, therefore 60,000 miliseconds make a minute
           -to calculate every 15minutes they are on the clock, 60,000*15
           - making it 900,000 miliseconds for every 15minutes
           - every 4 15mins make an hour, so divide by 4 to get total hours worked
           - make double to account for decimals.
        */
        
        long per15mins = (workedTimeInMillis/900000);
        System.out.println(per15mins);
        double hoursWorked = ((double)(per15mins)) / 4;
        
        System.out.println("Total hours worked= " + hoursWorked);
        
        return hoursWorked;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hoursLabel;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JButton punchInButton;
    public static javax.swing.JButton punchOutButton;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables

//    public JTextArea getTextArea(){
//        return timeTextArea;
//    }

}
